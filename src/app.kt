fun main() {
    //println("TwoSum")
    //TwoSum().run()
    //println("AddTwoNumbers")
    //AddTwoNumbers().run()
    //println("LengthOfLongestSubstring")
    //LengthOfLongestSubstring().run()
    //println("ReverseInteger")
    //ReverseInteger().run()
    //println("LongestPalindrom")
    //LongestPalindrome().run()
    //println("ContainerWithMostWatr")
    //ContainerWithMostWater().run()
    //println("PalindromeNumbr")
    //PalindromeNumber().run()
    //ThreeSum().run()
    //LetterCombinationsOfPhoneNumber().run()
    //RemoveNthNodeFromEndOfList().run()
    //ValidParentheses().run()
    //MergeTwoSortedLists().run()
    //PathSum().run()
    //TestMinStack().run()
    //RotateArray().run()
    //MissingNumber().run()
    //LCAOfBinaryTree().run()
    //LCAOfBinaryTree2().run()
    //MergeKSortedLists().run()
    //LongestValidParentheses().run()
    //LongestCommonPrefix().run()
    //RemoveDuplicateFromSortedArray().run()
    //GenerateParentheses().run()
    //StrStr().run()
    //SearchInRotatedSortedArray().run()
    //FindMinimumInSortedArray().run()
    //FindFirstAndLastPosInSortedArray().run()
    //CountAndSay().run()
    //Permutations().run()
    //StringToInteger().run()
    //MaxSubarray().run()
    //GroupAnagrams().run()
    //SingleNumber().run()
    //HappyNumber().run()
    //MoveZeroes().run()
    //MaxProfit().run()
    //CountElements().run()
    //MiddleNode().run()
    //BackspaceCompare().run()
    //DiameterOfBinaryTree().run()
    //LastStoneWeight().run()
    //ContiguousArray().run()
    //PerformingStringShifts().run()
    //ProductExceptSelf().run()
    //ValidParenthesisString().run()
    //BstFromPreorder().run()
    //SubarraySum().run()
    //LRUCacheTest().run()
    //JumpGame().run()
    //LongestCommonSubsequence().run()
    //MaximumSquare().run()
    //FirstUniqueTest().run()
    // BinaryTreeMaxPathSum().run()
    //BinaryTreeValidSequence().run()
    //FirstBadVersion().run()
    //RansomeNote().run()
    //FirstUniqueChar().run()
    //MajorityElement().run()
    //CousinInBinaryTree().run()
    //CheckIfStraightLine().run()
    //isPerfectSquare().run()
    //romanToInt().run()
    BrokenCalculator().run()
}